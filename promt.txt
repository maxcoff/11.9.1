ѕроект: Python-бот дл€ OKX, два режима Х order_mode.py Ц order mode: парные лимитные за€вки buy/sell по SPREAD и интервалу 

hedge.py Ц hedge mode : при по€влении открытой позиции ставит market-хедж с коэффициентом объема, потом conditional-TP на хедж и oco- TP/SL на основную позицию при чем SL основной позы и TP хеджа одинаковы по цене дл€ того чтоб когда цена пойдет против основной позиции они закрылись одновременно и прибыль по хеджу перекрыла убыток по основной позе. ¬ коде имеетс€ функци€ расчета данной цены с учетом комиссий биржи и коэффициента минимальной прибыли по хеджу.

ws_monitor.py Ц соедин€етс€ по WS, login>subscribe на каналы orders+positions Ц хранит fillPx/avgPx лимитных ордеров в entry_prices[(inst, posSide)] Ц строит self.positions, считает bot_mode (есть ли открыта€ позици€)

config.py Ц чтение переменных из .env через get(), чтобы можно было мен€ть конфиг Ђна летуї Ц параметры: API_KEY/SECRET/PASSPHRASE, INSTRUMENT, USE_DEMO, ORDER_SIZE/SPREAD/ORDER_INTERVAL, HEDGE_COEF/TP_SIZE, FEE_OPEN/CLOSE, EP

main.py Ц обща€ aiohttp-сесси€ Ц WS-клиент: sync_rest_time() OKX жЄстко свер€ет ваш ЂOK-ACCESS-TIMESTAMPї с серверным временем, fetch_snapshots(), ws_listen() в фоне асинхронно Ц запускает  OrderClient.run() и  HedgeManager.run()  

logger.py - логирование в консоль и файл /logs/bot.log уровн€ INFO и DEBUG и /logs/error.log уровн€ ERROR  с ротацией по окончании суток

¬есь проект лежит на GitHub https://github.com/maxcoff/11.8.2 . основные файлы проекта на данный момент main.py config.py hedge.py order_mode.py ws_monitor.py logger.py .env